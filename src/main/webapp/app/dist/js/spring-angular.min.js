angular.module("spAuthentication",[]).factory("AuthenticationService",["Base64","$http","$cookieStore","$rootScope","$timeout","spHelper","LOGIN_URL",function(Base64,$http,$cookieStore,$rootScope,$timeout,spH,LURL){var service={};return service.Login=function(username,password,callback){$http.post(spH.withContext(LURL),{username:username,password:password}).success(function(response){callback(response)})},service.SetCredentials=function(username,password){var authdata=Base64.encode(username+":"+password);$rootScope.globals={currentUser:{username:username,authdata:authdata}},$http.defaults.headers.common.Authorization="Basic "+authdata,$cookieStore.put("globals",$rootScope.globals)},service.ClearCredentials=function(){$rootScope.globals={},$cookieStore.remove("globals"),$http.defaults.headers.common.Authorization="Basic "},service}]).factory("Base64",function(){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;do chr1=input.charCodeAt(i++),chr2=input.charCodeAt(i++),chr3=input.charCodeAt(i++),enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output},decode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0,base64test=/[^A-Za-z0-9\+\/\=]/g;base64test.exec(input)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do enc1=keyStr.indexOf(input.charAt(i++)),enc2=keyStr.indexOf(input.charAt(i++)),enc3=keyStr.indexOf(input.charAt(i++)),enc4=keyStr.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(15&enc2)<<4|enc3>>2,chr3=(3&enc3)<<6|enc4,output+=String.fromCharCode(chr1),64!=enc3&&(output+=String.fromCharCode(chr2)),64!=enc4&&(output+=String.fromCharCode(chr3)),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output}}}),angular.module("spConfig",[]).constant("BASE_CONTEXT","").constant("LOGIN_URL","api/login").service("spHelper",["BASE_CONTEXT",function(BC){return this.withContext=function(url){return url&&"/"===url.charAt(0)&&(url=url.substring(1,url.length-1)),BC+url},this}]),angular.module("spSession",[]).controller("sessionCtrl",["$scope","AuthenticationService",function($s,authService){$s.login=function(username,password){authService.Login(username,password,function(response){alert("login successful!"),authService.SetCredentials(username,password)})}}]),angular.module("spApp",["spTemplates","fluid.webComponents","spConfig","spAuthentication","spSession","ui.router","ngCookies"]).config(["$stateProvider","$urlRouterProvider",function(sp,urp){urp.otherwise("/"),sp.state("home",{url:"/",templateUrl:"templates/home.html",controller:"sessionCtrl"})}]).controller("mainCtrl",["$scope",function($s){}]),angular.module("spTemplates",["templates/home.html"]),angular.module("templates/home.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/home.html",'<div class="container center-in"><div class="jumbotron"><h1>Welcome to Spring-angular project</h1><h5>Version 1.0</h5><h5>Concept by Jerico de Guzman</h5><form role="form" class="login-form" ng-submit="login(username,password)"><h2 class="text-primary">Login</h2><div class="col-lg-6 form-group form-group-lg"><label class="control-label" for="usernameField">Username</label><input class="form-control" id="usernameField" ng-model="username"></div><div class="col-lg-6 form-group form-group-lg"><label class="control-label" for="passwordField">Password</label><input type="password" class="form-control" id="passwordField" ng-model="password"></div><button class="btn btn-info" type="submit">Submit</button></form></div></div>')}]);